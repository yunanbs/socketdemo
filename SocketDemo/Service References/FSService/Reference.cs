//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocketDemo.FSService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FSService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpLoadStoreInfo", ReplyAction="http://tempuri.org/IService/UpLoadStoreInfoResponse")]
        int UpLoadStoreInfo(string SiteID, System.DateTime Date, string[] IDLabels);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpLoadFSData", ReplyAction="http://tempuri.org/IService/UpLoadFSDataResponse")]
        int UpLoadFSData(string SiteID, System.DateTime Date, string Labels, double VFval, double jd, double wd, double dc);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : SocketDemo.FSService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<SocketDemo.FSService.IService>, SocketDemo.FSService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int UpLoadStoreInfo(string SiteID, System.DateTime Date, string[] IDLabels) {
            return base.Channel.UpLoadStoreInfo(SiteID, Date, IDLabels);
        }
        
        public int UpLoadFSData(string SiteID, System.DateTime Date, string Labels, double VFval, double jd, double wd, double dc) {
            return base.Channel.UpLoadFSData(SiteID, Date, Labels, VFval, jd, wd, dc);
        }
    }
}
